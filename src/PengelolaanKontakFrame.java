import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class PengelolaanKontakFrame extends javax.swing.JFrame {

    /**
     * Creates new form PengelolaanKontakFrame
     */
    public PengelolaanKontakFrame() {
        initComponents();
        cmbKategori.addItem("Keluarga");
        cmbKategori.addItem("Teman");
        cmbKategori.addItem("Kerja");
        Connection conn = PengelolaDatabase.koneksi();
        if (conn != null) {
            PengelolaDatabase.buatTabelKontak();
            tampilkanKontak();
        } else {
            System.out.println("Koneksi gagal, tabel tidak dapat dibuat.");
        }
    }

    private void tampilkanKontak() {
        List<Map<String, String>> kontak = PengelolaDatabase.ambilKontak();
        DefaultTableModel model = (DefaultTableModel) jTableKontak.getModel();
        model.setRowCount(0); // Bersihkan tabel

        for (Map<String, String> data : kontak) {
            model.addRow(new Object[]{
                data.get("id"),
                data.get("nama"),
                data.get("no_telepon"),
                data.get("kategori")
            });
        }
    }

    public class KontakManagerFrame extends javax.swing.JFrame {

    public KontakManagerFrame() {
        initComponents();
        PengelolaDatabase.buatTabelKontak();  // Membuat tabel saat aplikasi dimulai
        tampilkanKontak();
    }
    

    private void buatTabelKontak() {
        String sql = "CREATE TABLE IF NOT EXISTS kontak (\n"
                    + " id INTEGER PRIMARY KEY AUTOINCREMENT,\n"
                    + " nama TEXT NOT NULL,\n"
                    + " no_telepon TEXT NOT NULL,\n"
                    + " kategori TEXT NOT NULL\n"
                    + ");";
        try (Connection conn = PengelolaDatabase.koneksi();
             Statement stmt = conn.createStatement()) {
            stmt.execute(sql);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        txtNoTelepon = new javax.swing.JTextField();
        cmbKategori = new javax.swing.JComboBox<>();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableKontak = new javax.swing.JTable();
        btnCari = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnExportCSV = new javax.swing.JButton();
        importFromCSV = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Latihan 3", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Aplikasi Pengelolaan Kontak");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setBackground(new java.awt.Color(51, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Olah Data", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Nama");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Nomor Telepon");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Kategori");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(txtNama, gridBagConstraints);

        txtNoTelepon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoTeleponKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(txtNoTelepon, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(cmbKategori, gridBagConstraints);

        btnTambah.setText("Tambah Kontak");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(btnTambah, gridBagConstraints);

        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEdit.setText("Edit Kontak");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(btnEdit, gridBagConstraints);

        btnHapus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHapus.setText("Hapus Kontak");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel2.add(btnHapus, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.WEST);

        jPanel3.setBackground(new java.awt.Color(51, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabel", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTableKontak.setBackground(new java.awt.Color(0, 204, 255));
        jTableKontak.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Nama", "No Telepon", "Kategori"
            }
        ));
        jTableKontak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableKontakMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableKontak);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 300;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        btnCari.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel3.add(btnCari, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel3.add(txtCari, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Masukkan Nama atau Nomor Telepon");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel3.add(jLabel5, gridBagConstraints);

        btnExportCSV.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExportCSV.setText("Simpan");
        btnExportCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportCSVActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel3.add(btnExportCSV, gridBagConstraints);

        importFromCSV.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        importFromCSV.setText("Muat");
        importFromCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFromCSVActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel3.add(importFromCSV, gridBagConstraints);

        getContentPane().add(jPanel3, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        String nama = txtNama.getText();
        String noTelepon = txtNoTelepon.getText();
        String kategori = (String) cmbKategori.getSelectedItem();

        // Validasi input nama, nomor telepon, dan kategori
        if (nama.isEmpty() || noTelepon.isEmpty() || kategori == null) {
            JOptionPane.showMessageDialog(this, "Semua data harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validasi panjang nomor telepon
        if (noTelepon.length() < 10 || noTelepon.length() > 13) {
            JOptionPane.showMessageDialog(this, "Nomor telepon harus memiliki panjang antara 10 hingga 13 digit.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Tambah data kontak ke database
        PengelolaDatabase.tambahKontak(nama, noTelepon, kategori);

        // Bersihkan input setelah menambah kontak
        txtNama.setText("");
        txtNoTelepon.setText("");
        cmbKategori.setSelectedIndex(0);

        JOptionPane.showMessageDialog(this, "Kontak berhasil ditambahkan!");
        tampilkanKontak(); // Refresh JTable atau tampilan daftar kontak
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int selectedRow = jTableKontak.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih kontak yang ingin diedit", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String nama = txtNama.getText();
        String noTelepon = txtNoTelepon.getText();
        String kategori = (String) cmbKategori.getSelectedItem();

        // Validasi input nama, nomor telepon, dan kategori
        if (nama.isEmpty() || noTelepon.isEmpty() || kategori == null) {
            JOptionPane.showMessageDialog(this, "Semua data harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validasi panjang nomor telepon
        if (noTelepon.length() < 10 || noTelepon.length() > 13) {
            JOptionPane.showMessageDialog(this, "Nomor telepon harus memiliki panjang antara 10 hingga 13 digit.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Dapatkan id dari baris yang dipilih untuk pengeditan
        int id = Integer.parseInt(jTableKontak.getValueAt(selectedRow, 0).toString());

        // Update data kontak di database
        PengelolaDatabase.perbaruiKontak(id, nama, noTelepon, kategori);

        JOptionPane.showMessageDialog(this, "Kontak berhasil diperbarui!");

        // Kosongkan semua field setelah edit
        txtNama.setText("");
        txtNoTelepon.setText("");
        cmbKategori.setSelectedIndex(-1);
        tampilkanKontak(); 
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int selectedRow = jTableKontak.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih kontak yang ingin dihapus", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int id = Integer.parseInt(jTableKontak.getValueAt(selectedRow, 0).toString());

        // Konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus kontak ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            PengelolaDatabase.hapusKontak(id);

            JOptionPane.showMessageDialog(this, "Kontak berhasil dihapus!");

            // Kosongkan semua field setelah edit
            txtNama.setText("");
            txtNoTelepon.setText("");
            cmbKategori.setSelectedIndex(-1); // Mengatur JComboBox agar tidak ada yang dipilih

            // Refresh JTable atau tampilan daftar kontak
            tampilkanKontak(); 
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void jTableKontakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableKontakMouseClicked
        int selectedRow = jTableKontak.getSelectedRow();

        if (selectedRow != -1) { // Pastikan ada baris yang dipilih
            // Ambil data dari kolom pada baris yang dipilih
            String id = jTableKontak.getValueAt(selectedRow, 0).toString();
            String nama = jTableKontak.getValueAt(selectedRow, 1).toString();
            String noTelepon = jTableKontak.getValueAt(selectedRow, 2).toString();
            String kategori = jTableKontak.getValueAt(selectedRow, 3).toString();

            // Set data ke JTextField dan JComboBox
            txtNama.setText(nama);
            txtNoTelepon.setText(noTelepon);
            cmbKategori.setSelectedItem(kategori); // Set item JComboBox sesuai kategori
        }
    }//GEN-LAST:event_jTableKontakMouseClicked

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        String keyword = txtCari.getText().trim();  // Ambil kata kunci dari JTextField

        // Validasi input pencarian
        if (keyword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Masukkan nama atau nomor telepon untuk mencari.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        List<Map<String, String>> hasilPencarian = PengelolaDatabase.cariKontak(keyword);
        DefaultTableModel model = (DefaultTableModel) jTableKontak.getModel();
        model.setRowCount(0); // Bersihkan tabel

        // Tampilkan hasil pencarian di JTable
        for (Map<String, String> data : hasilPencarian) {
            model.addRow(new Object[]{
                data.get("id"),
                data.get("nama"),
                data.get("no_telepon"),
                data.get("kategori")
            });
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void txtNoTeleponKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoTeleponKeyTyped
        char c = evt.getKeyChar();
        // Jika karakter bukan angka, batalkan event
        if (!Character.isDigit(c)) {
            evt.consume(); // Mengabaikan input non-angka
            JOptionPane.showMessageDialog(null, "Masukkan hanya angka untuk nomor telepon.");
        }
    }//GEN-LAST:event_txtNoTeleponKeyTyped

    private void btnExportCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportCSVActionPerformed
        try {
            // Tentukan lokasi file CSV
            FileWriter csvWriter = new FileWriter("daftar_kontak.csv");
            csvWriter.append("ID, Nama, Nomor Telepon, Kategori\n"); // Header kolom

            // Ambil data dari JTable dan tulis ke CSV
            DefaultTableModel model = (DefaultTableModel) jTableKontak.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                csvWriter.append(model.getValueAt(i, 0).toString()).append(","); // ID
                csvWriter.append(model.getValueAt(i, 1).toString()).append(","); // Nama
                csvWriter.append(model.getValueAt(i, 2).toString()).append(","); // Nomor Telepon
                csvWriter.append(model.getValueAt(i, 3).toString()).append("\n"); // Kategori
            }

            csvWriter.flush();
            csvWriter.close();

            JOptionPane.showMessageDialog(this, "Data berhasil diekspor ke daftar_kontak.csv");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saat mengekspor data: " + e.getMessage());
        }
    }//GEN-LAST:event_btnExportCSVActionPerformed

    private void importFromCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFromCSVActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Pilih file CSV untuk diimpor");
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();

            try (BufferedReader br = new BufferedReader(new FileReader(selectedFile))) {
                String line;
                // Lewati header (baris pertama)
                br.readLine();

                while ((line = br.readLine()) != null) {
                    String[] values = line.split(",");
                    if (values.length >= 3) {
                        String nama = values[1].trim();
                        String noTelepon = values[2].trim();
                        String kategori = values[3].trim();

                        // Tambahkan kontak ke database
                        PengelolaDatabase.tambahKontak(nama, noTelepon, kategori);
                    }
                }

                JOptionPane.showMessageDialog(this, "Data berhasil diimpor dari " + selectedFile.getName());
                tampilkanKontak(); // Refresh JTable dengan data baru
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error saat mengimpor data: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_importFromCSVActionPerformed

    private void tampilkanKontakBerdasarkanKategori(String kategori) {
        List<Map<String, String>> kontak = PengelolaDatabase.ambilKontak();
        DefaultTableModel model = (DefaultTableModel) jTableKontak.getModel();
        model.setRowCount(0); // Bersihkan tabel

        for (Map<String, String> data : kontak) {
            // Jika kategori adalah "Semua", tampilkan semua data; jika tidak, filter berdasarkan kategori
            if (kategori.equals("Semua") || kategori.equals(data.get("kategori"))) {
                model.addRow(new Object[]{
                    data.get("id"),
                    data.get("nama"),
                    data.get("no_telepon"),
                    data.get("kategori")
                });
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PengelolaanKontakFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PengelolaanKontakFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PengelolaanKontakFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PengelolaanKontakFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PengelolaanKontakFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExportCSV;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cmbKategori;
    private javax.swing.JButton importFromCSV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableKontak;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNoTelepon;
    // End of variables declaration//GEN-END:variables
}
